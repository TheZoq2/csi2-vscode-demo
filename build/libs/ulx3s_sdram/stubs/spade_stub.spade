use ulx3s_sdram::main::Uart;
use ulx3s_sdram::main::DramWishbone;
use ulx3s_sdram::main::SdramStatus;
use ulx3s_sdram::main::SdramPins;
use ulx3s_sdram::axi::AxiPort;
use ulx3s_sdram::avalon::AvalonPort;

use ecp5stubs::ecp5stubs::oddrx1f;

use std::ports::new_mut_wire;
use std::ports::read_mut_wire;


#[no_mangle]
entity sdram_controller_impl(
    #[no_mangle] clk: clock,
    #[no_mangle] init_done: &mut bool,
    #[no_mangle] init_error: &mut bool,
    #[no_mangle] rst: bool,
    #[no_mangle] sdram_a: &mut int<13>,
    #[no_mangle] sdram_ba: &mut int<2>,
    #[no_mangle] sdram_cas_n: &mut bool,
    #[no_mangle] sdram_cke: &mut bool,
    #[no_mangle] sdram_cs_n: &mut bool,
    #[no_mangle] sdram_dm: &mut int<2>,
    #[no_mangle] sdram_dq: int<16>,
    #[no_mangle] sdram_ras_n: &mut bool,
    #[no_mangle] sdram_we_n: &mut bool,
    #[no_mangle] uart_rx: bool,
    #[no_mangle] uart_tx: &mut bool,
    ##STUB_INPUTS##
    #[no_mangle] user_clk: &mut bool,
    #[no_mangle] user_rst: &mut bool,
) __builtin__

entity sdram_controller(
    ##CLK_INPUTS##
    rst: bool,
    uart: Uart,
    pins: SdramPins
) -> (##TYPES##, &SdramStatus) {
    let init_done = inst new_mut_wire();
    let init_error = inst new_mut_wire();

    ##BODY##

    let _ = inst sdram_controller_impl$(
        clk: ##MAIN_CLK##,
        rst,

        uart_tx: uart.tx,
        uart_rx: *uart.rx,

        sdram_a: pins.sdram_a,
        sdram_ba: pins.sdram_ba,
        sdram_ras_n: pins.sdram_ras_n,
        sdram_cas_n: pins.sdram_cas_n,
        sdram_we_n: pins.sdram_we_n,
        sdram_cs_n: pins.sdram_cs_n,
        sdram_dm: pins.sdram_dm,
        sdram_dq: *pins.sdram_dq,
        sdram_cke: pins.sdram_cke,

        init_done,
        init_error,

        ##BINDINGS##

        // NOTE: This port has no use to us, but is generated by litedram
        user_rst: inst new_mut_wire(),
        user_clk: inst new_mut_wire()
    );


    set pins.sdram_clock = inst oddrx1f$(d: 0b01, rst, sclk: ##SDRAM_CLK##);

    let status = SdramStatus$(
        init_done: inst read_mut_wire(init_done),
        init_error: inst read_mut_wire(init_error),
    );

    (##RETURN_PORTS##, &status)
}

