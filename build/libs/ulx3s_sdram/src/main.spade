use std::ports::new_mut_wire;
use std::ports::read_mut_wire;

struct WishboneOutputs {
    addr: uint<24>,
    write: Option<uint<16>>,
    sel: uint<2>,
    cyc: bool,
    stb: bool,
}

struct port DramWishbone {
    addr: &mut uint<24>,
    write: &mut Option<uint<16>>,
    data_out: &uint<16>,
    sel: &mut uint<2>,
    cyc: &mut bool,
    stb: &mut bool,
    ack: &bool,
    err: &bool
}


impl DramWishbone {
    // NOTE: Unused dummy output
    entity unused(self) -> bool {
        set self.addr = 0;
        set self.write = None();
        set self.sel = 0;
        set self.cyc = false;
        set self.stb = false;
        true
    }

    // NOTE: Unused dummy output
    entity with_outputs(self, out: WishboneOutputs) -> bool {
        set self.addr = out.addr;
        set self.write = out.write;
        set self.sel = out.sel;
        set self.cyc = out.cyc;
        set self.stb = out.stb;
        true
    }
}


struct port Uart {
    tx: &mut bool,
    rx: &bool,
}

struct SdramStatus {
    init_done: bool,
    init_error: bool,
}

struct port SdramPins {
    sdram_a: &mut int<13>,
    sdram_ba: &mut int<2>,
    sdram_ras_n: &mut bool,
    sdram_cas_n: &mut bool,
    sdram_we_n: &mut bool,
    sdram_cs_n: &mut bool,
    sdram_dm: &mut int<2>,
    sdram_dq: &int<16>,
    sdram_cke: &mut bool,
    sdram_clock: &mut bool,
}

